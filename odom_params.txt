Param: GTSAM/Optimizer = "1"                               [0=Levenberg 1=GaussNewton 2=Dogleg]
Param: Icp/CCFilterOutFarthestPoints = "false"             [If true, the algorithm will automatically ignore farthest points from the reference, for better convergence.]
Param: Icp/CCMaxFinalRMS = "0.2"                           [Maximum final RMS error.]
Param: Icp/CCSamplingLimit = "50000"                       [Maximum number of points per cloud (they are randomly resampled below this limit otherwise).]
Param: Icp/CorrespondenceRatio = "0.1"                     [Ratio of matching correspondences to accept the transform.]
Param: Icp/DebugExportFormat = ""                          [Export scans used for ICP in the specified format (a warning on terminal will be shown with the file paths used). Supported formats are "pcd", "ply" or "vtk". If logger level is debug, from and to scans will stamped, so previous files won't be overwritten.]
Param: Icp/DownsamplingStep = "1"                          [Downsampling step size (1=no sampling). This is done before uniform sampling.]
Param: Icp/Epsilon = "0"                                   [Set the transformation epsilon (maximum allowable difference between two consecutive transformations) in order for an optimization to be considered as having converged to the final solution.]
Param: Icp/Force4DoF = "false"                             [Limit ICP to x, y, z and yaw DoF. Available if Icp/Strategy > 0.]
Param: Icp/Iterations = "30"                               [Max iterations.]
Param: Icp/MaxCorrespondenceDistance = "0.1"               [Max distance for point correspondences.]
Param: Icp/MaxRotation = "0.78"                            [Maximum ICP rotation correction accepted (rad).]
Param: Icp/MaxTranslation = "0.2"                          [Maximum ICP translation correction accepted (m).]
Param: Icp/OutlierRatio = "0.85"                           [Outlier ratio used with Icp/Strategy>0. For libpointmatcher, this parameter set TrimmedDistOutlierFilter/ratio for convenience when configuration file is not set. For CCCoreLib, this parameter set the "finalOverlapRatio". The value should be between 0 and 1.]
Param: Icp/PMConfig = ""                                   [Configuration file (*.yaml) used by libpointmatcher. Note that data filters set for libpointmatcher are done after filtering done by rtabmap (i.e., Icp/VoxelSize, Icp/DownsamplingStep), so make sure to disable those in rtabmap if you want to use only those from libpointmatcher. Parameters Icp/Iterations, Icp/Epsilon and Icp/MaxCorrespondenceDistance are also ignored if configuration file is set.]
Param: Icp/PMMatcherEpsilon = "0.0"                        [KDTreeMatcher/epsilon: approximation to use for the nearest-neighbor search. For convenience when configuration file is not set.]
Param: Icp/PMMatcherIntensity = "false"                    [KDTreeMatcher:  among nearest neighbors, keep only the one with the most similar intensity. This only work with Icp/PMMatcherKnn>1.]
Param: Icp/PMMatcherKnn = "1"                              [KDTreeMatcher/knn: number of nearest neighbors to consider it the reference. For convenience when configuration file is not set.]
Param: Icp/PointToPlane = "true"                           [Use point to plane ICP.]
Param: Icp/PointToPlaneGroundNormalsUp = "0.0"             [Invert normals on ground if they are pointing down (useful for ring-like 3D LiDARs). 0 means disabled, 1 means only normals perfectly aligned with -z axis. This is only done with 3D scans.]
Param: Icp/PointToPlaneK = "5"                             [Number of neighbors to compute normals for point to plane if the cloud doesn't have already normals.]
Param: Icp/PointToPlaneLowComplexityStrategy = "1"         [If structural complexity is below Icp/PointToPlaneMinComplexity: set to 0 to so that the transform is automatically rejected, set to 1 to limit ICP correction in axes with most constraints (e.g., for a corridor-like environment, the resulting transform will be limited in y and yaw, x will taken from the guess), set to 2 to accept "as is" the transform computed by PointToPoint.]
Param: Icp/PointToPlaneMinComplexity = "0.02"              [Minimum structural complexity (0.0=low, 1.0=high) of the scan to do PointToPlane registration, otherwise PointToPoint registration is done instead and strategy from Icp/PointToPlaneLowComplexityStrategy is used. This check is done only when Icp/PointToPlane=true.]
Param: Icp/PointToPlaneRadius = "0.0"                      [Search radius to compute normals for point to plane if the cloud doesn't have already normals.]
Param: Icp/RangeMax = "0"                                  [Maximum range filtering (0=disabled).]
Param: Icp/RangeMin = "0"                                  [Minimum range filtering (0=disabled).]
Param: Icp/ReciprocalCorrespondences = "true"              [To be a valid correspondence, the corresponding point in target cloud to point in source cloud should be both their closest closest correspondence.]
Param: Icp/Strategy = "1"                                  [ICP implementation: 0=Point Cloud Library, 1=libpointmatcher, 2=CCCoreLib (CloudCompare).]
Param: Icp/VoxelSize = "0.05"                              [Uniform sampling voxel size (0=disabled).]
Param: Kp/ByteToFloat = "false"                            [For Kp/NNStrategy=1, binary descriptors are converted to float by converting each byte to float instead of converting each bit to float. When converting bytes instead of bits, less memory is used and search is faster at the cost of slightly less accurate matching.]
Param: Odom/AlignWithGround = "false"                      [Align odometry with the ground on initialization.]
Param: Odom/FillInfoData = "true"                          [Fill info with data (inliers/outliers features).]
Param: Odom/FilteringStrategy = "0"                        [0=No filtering 1=Kalman filtering 2=Particle filtering. This filter is used to smooth the odometry output.]
Param: Odom/GuessMotion = "true"                           [Guess next transformation from the last motion computed.]
Param: Odom/GuessSmoothingDelay = "0"                      [Guess smoothing delay (s). Estimated velocity is averaged based on last transforms up to this maximum delay. This can help to get smoother velocity prediction. Last velocity computed is used directly if "Odom/FilteringStrategy" is set or the delay is below the odometry rate.]
Param: Odom/Holonomic = "true"                             [If the robot is holonomic (strafing commands can be issued). If not, y value will be estimated from x and yaw values (y=x*tan(yaw)).]
Param: Odom/ImageBufferSize = "1"                          [Data buffer size (0 min inf).]
Param: Odom/ImageDecimation = "1"                          [Decimation of the RGB image before registration. If depth size is larger than decimated RGB size, depth is decimated to be always at most equal to RGB size. If Vis/DepthAsMask is true and if depth is smaller than decimated RGB, depth may be interpolated to match RGB size for feature detection.]
Param: Odom/KalmanMeasurementNoise = "0.01"                [Process measurement covariance value.]
Param: Odom/KalmanProcessNoise = "0.001"                   [Process noise covariance value.]
Param: Odom/KeyFrameThr = "0.3"                            [[Visual] Create a new keyframe when the number of inliers drops under this ratio of features in last frame. Setting the value to 0 means that a keyframe is created for each processed frame.]
Param: Odom/ParticleLambdaR = "100"                        [Lambda of rotational components (roll,pitch,yaw).]
Param: Odom/ParticleLambdaT = "100"                        [Lambda of translation components (x,y,z).]
Param: Odom/ParticleNoiseR = "0.002"                       [Noise (rad) of rotational components (roll,pitch,yaw).]
Param: Odom/ParticleNoiseT = "0.002"                       [Noise (m) of translation components (x,y,z).]
Param: Odom/ParticleSize = "400"                           [Number of particles of the filter.]
Param: Odom/ResetCountdown = "0"                           [Automatically reset odometry after X consecutive images on which odometry cannot be computed (value=0 disables auto-reset).]
Param: Odom/ScanKeyFrameThr = "0.9"                        [[Geometry] Create a new keyframe when the number of ICP inliers drops under this ratio of points in last frame's scan. Setting the value to 0 means that a keyframe is created for each processed frame.]
Param: Odom/Strategy = "0"                                 [0=Frame-to-Map (F2M) 1=Frame-to-Frame (F2F) 2=Fovis 3=viso2 4=DVO-SLAM 5=ORB_SLAM2 6=OKVIS 7=LOAM 8=MSCKF_VIO 9=VINS-Fusion 10=OpenVINS 11=FLOAM 12=Open3D]
Param: Odom/VisKeyFrameThr = "150"                         [[Visual] Create a new keyframe when the number of inliers drops under this threshold. Setting the value to 0 means that a keyframe is created for each processed frame.]
Param: OdomF2M/BundleAdjustment = "1"                      [Local bundle adjustment: 0=disabled, 1=g2o, 2=cvsba, 3=Ceres.]
Param: OdomF2M/BundleAdjustmentMaxFrames = "10"            [Maximum frames used for bundle adjustment (0=inf or all current frames in the local map).]
Param: OdomF2M/MaxNewFeatures = "0"                        [[Visual] Maximum features (sorted by keypoint response) added to local map from a new key-frame. 0 means no limit.]
Param: OdomF2M/MaxSize = "2000"                            [[Visual] Local map size: If > 0 (example 5000), the odometry will maintain a local map of X maximum words.]
Param: OdomF2M/ScanMaxSize = "2000"                        [[Geometry] Maximum local scan map size.]
Param: OdomF2M/ScanRange = "0"                             [[Geometry] Distance Range used to filter points of local map (when > 0). 0 means local map is updated using time and not range.]
Param: OdomF2M/ScanSubtractAngle = "45"                    [[Geometry] Max angle (degrees) used to filter points of a new added scan to local map (when "OdomF2M/ScanSubtractRadius">0). 0 means any angle.]
Param: OdomF2M/ScanSubtractRadius = "0.05"                 [[Geometry] Radius used to filter points of a new added scan to local map. This could match the voxel size of the scans.]
Param: OdomF2M/ValidDepthRatio = "0.75"                    [If a new frame has points without valid depth, they are added to local feature map only if points with valid depth on total points is over this ratio. Setting to 1 means no points without valid depth are added to local feature map.]
Param: OdomFovis/BucketHeight = "80"                       []
Param: OdomFovis/BucketWidth = "80"                        []
Param: OdomFovis/CliqueInlierThreshold = "0.1"             [See Howard's greedy max-clique algorithm for determining the maximum set of mutually consisten feature matches. This specifies the compatibility threshold, in meters.]
Param: OdomFovis/FastThreshold = "20"                      [FAST threshold.]
Param: OdomFovis/FastThresholdAdaptiveGain = "0.005"       [FAST threshold adaptive gain.]
Param: OdomFovis/FeatureSearchWindow = "25"                [Specifies the size of the search window to apply when searching for feature matches across time frames.  The search is conducted around the feature location predicted by the initial rotation estimate.]
Param: OdomFovis/FeatureWindowSize = "9"                   [The size of the n x n image patch surrounding each feature, used for keypoint matching.]
Param: OdomFovis/InlierMaxReprojectionError = "1.5"        [The maximum image-space reprojection error (in pixels) a feature match is allowed to have and still be considered an inlier in the set of features used for motion estimation.]
Param: OdomFovis/MaxKeypointsPerBucket = "25"              []
Param: OdomFovis/MaxMeanReprojectionError = "10.0"         [Maximum mean reprojection error over the inlier feature matches for the motion estimate to be considered valid.]
Param: OdomFovis/MaxPyramidLevel = "3"                     [The maximum Gaussian pyramid level to process the image at. Pyramid level 1 corresponds to the original image.]
Param: OdomFovis/MinFeaturesForEstimate = "20"             [Minimum number of features in the inlier set for the motion estimate to be considered valid.]
Param: OdomFovis/MinPyramidLevel = "0"                     [The minimum pyramid level.]
Param: OdomFovis/StereoMaxDisparity = "128"                []
Param: OdomFovis/StereoMaxDistEpipolarLine = "1.5"         []
Param: OdomFovis/StereoMaxRefinementDisplacement = "1.0"   []
Param: OdomFovis/StereoRequireMutualMatch = "true"         []
Param: OdomFovis/TargetPixelsPerFeature = "250"            [Specifies the desired feature density as a ratio of input image pixels per feature detected.  This number is used to control the adaptive feature thresholding.]
Param: OdomFovis/UpdateTargetFeaturesWithRefined = "false" [When subpixel refinement is enabled, the refined feature locations can be saved over the original feature locations.  This has a slightly negative impact on frame-to-frame visual odometry, but is likely better when using this library as part of a visual SLAM algorithm.]
Param: OdomFovis/UseAdaptiveThreshold = "true"             [Use FAST adaptive threshold.]
Param: OdomFovis/UseBucketing = "true"                     []
Param: OdomFovis/UseHomographyInitialization = "true"      [Use homography initialization.]
Param: OdomFovis/UseImageNormalization = "false"           []
Param: OdomFovis/UseSubpixelRefinement = "true"            [Specifies whether or not to refine feature matches to subpixel resolution.]
Param: OdomLOAM/AngVar = "0.01"                            [Angular output variance.]
Param: OdomLOAM/LinVar = "0.01"                            [Linear output variance.]
Param: OdomLOAM/LocalMapping = "true"                      [Local mapping. It adds more time to compute odometry, but accuracy is significantly improved.]
Param: OdomLOAM/Resolution = "0.2"                         [Map resolution]
Param: OdomLOAM/ScanPeriod = "0.1"                         [Scan period (s)]
Param: OdomLOAM/Sensor = "2"                               [Velodyne sensor: 0=VLP-16, 1=HDL-32, 2=HDL-64E]
Param: OdomMSCKF/FastThreshold = "10"                      []
Param: OdomMSCKF/GridCol = "5"                             []
Param: OdomMSCKF/GridMaxFeatureNum = "4"                   []
Param: OdomMSCKF/GridMinFeatureNum = "3"                   []
Param: OdomMSCKF/GridRow = "4"                             []
Param: OdomMSCKF/InitCovAccBias = "0.01"                   []
Param: OdomMSCKF/InitCovExRot = "0.00030462"               []
Param: OdomMSCKF/InitCovExTrans = "0.000025"               []
Param: OdomMSCKF/InitCovGyroBias = "0.01"                  []
Param: OdomMSCKF/InitCovVel = "0.25"                       []
Param: OdomMSCKF/MaxCamStateSize = "20"                    []
Param: OdomMSCKF/MaxIteration = "30"                       []
Param: OdomMSCKF/NoiseAcc = "0.05"                         []
Param: OdomMSCKF/NoiseAccBias = "0.01"                     []
Param: OdomMSCKF/NoiseFeature = "0.035"                    []
Param: OdomMSCKF/NoiseGyro = "0.005"                       []
Param: OdomMSCKF/NoiseGyroBias = "0.001"                   []
Param: OdomMSCKF/OptTranslationThreshold = "0"             []
Param: OdomMSCKF/PatchSize = "15"                          []
Param: OdomMSCKF/PositionStdThreshold = "8.0"              []
Param: OdomMSCKF/PyramidLevels = "3"                       []
Param: OdomMSCKF/RansacThreshold = "3"                     []
Param: OdomMSCKF/RotationThreshold = "0.2618"              []
Param: OdomMSCKF/StereoThreshold = "5"                     []
Param: OdomMSCKF/TrackPrecision = "0.01"                   []
Param: OdomMSCKF/TrackingRateThreshold = "0.5"             []
Param: OdomMSCKF/TranslationThreshold = "0.4"              []
Param: OdomMono/InitMinFlow = "100"                        [Minimum optical flow required for the initialization step.]
Param: OdomMono/InitMinTranslation = "0.1"                 [Minimum translation required for the initialization step.]
Param: OdomMono/MaxVariance = "0.01"                       [Maximum variance to add new points to local map.]
Param: OdomMono/MinTranslation = "0.02"                    [Minimum translation to add new points to local map. On initialization, translation x 5 is used as the minimum.]
Param: OdomOKVIS/ConfigPath = ""                           [Path of OKVIS config file.]
Param: OdomORBSLAM/AccNoise = "0.1"                        [IMU accelerometer "white noise".]
Param: OdomORBSLAM/AccWalk = "0.0001"                      [IMU accelerometer "random walk".]
Param: OdomORBSLAM/Bf = "0.076"                            [Fake IR projector baseline (m) used only when stereo is not used.]
Param: OdomORBSLAM/Fps = "0.0"                             [Camera FPS (0 to estimate from input data).]
Param: OdomORBSLAM/GyroNoise = "0.01"                      [IMU gyroscope "white noise".]
Param: OdomORBSLAM/GyroWalk = "0.000001"                   [IMU gyroscope "random walk".]
Param: OdomORBSLAM/Inertial = "false"                      [Enable IMU. Only supported with ORB_SLAM3.]
Param: OdomORBSLAM/MapSize = "3000"                        [Maximum size of the feature map (0 means infinite). Only supported with ORB_SLAM2.]
Param: OdomORBSLAM/MaxFeatures = "1000"                    [Maximum ORB features extracted per frame.]
Param: OdomORBSLAM/SamplingRate = "0"                      [IMU sampling rate (0 to estimate from input data).]
Param: OdomORBSLAM/ThDepth = "40.0"                        [Close/Far threshold. Baseline times.]
Param: OdomORBSLAM/VocPath = ""                            [Path to ORB vocabulary (*.txt).]
Param: OdomOpen3D/MaxDepth = "3.0"                         [Maximum depth.]
Param: OdomOpen3D/Method = "0"                             [Registration method: 0=PointToPlane, 1=Intensity, 2=Hybrid.]
Param: OdomOpenVINS/AccelerometerNoiseDensity = "0.01"     [[m/s^2/sqrt(Hz)] (accel "white noise")]
Param: OdomOpenVINS/AccelerometerRandomWalk = "0.001"      [[m/s^3/sqrt(Hz)] (accel bias diffusion)]
Param: OdomOpenVINS/CalibCamExtrinsics = "false"           [Bool to determine whether or not to calibrate imu-to-camera pose]
Param: OdomOpenVINS/CalibCamIntrinsics = "false"           [Bool to determine whether or not to calibrate camera intrinsics]
Param: OdomOpenVINS/CalibCamTimeoffset = "false"           [Bool to determine whether or not to calibrate camera to IMU time offset]
Param: OdomOpenVINS/CalibIMUGSensitivity = "false"         [Bool to determine whether or not to calibrate the Gravity sensitivity]
Param: OdomOpenVINS/CalibIMUIntrinsics = "false"           [Bool to determine whether or not to calibrate the IMU intrinsics]
Param: OdomOpenVINS/DtSLAMDelay = "0.0"                    [Delay, in seconds, that we should wait from init before we start estimating SLAM features]
Param: OdomOpenVINS/FeatRepMSCKF = "0"                     [What representation our features are in (msckf features)]
Param: OdomOpenVINS/FeatRepSLAM = "4"                      [What representation our features are in (slam features)]
Param: OdomOpenVINS/FiMaxBaseline = "40"                   [Max baseline ratio to accept triangulated features]
Param: OdomOpenVINS/FiMaxCondNumber = "10000"              [Max condition number of linear triangulation matrix accept triangulated features]
Param: OdomOpenVINS/FiMaxRuns = "5"                        [Max runs for Levenberg-Marquardt]
Param: OdomOpenVINS/FiRefineFeatures = "true"              [If we should perform Levenberg-Marquardt refinement]
Param: OdomOpenVINS/FiTriangulate1d = "false"              [If we should perform 1d triangulation instead of 3d]
Param: OdomOpenVINS/GravityMag = "9.81"                    [Gravity magnitude in the global frame (i.e. should be 9.81 typically)]
Param: OdomOpenVINS/GyroscopeNoiseDensity = "0.001"        [[rad/s/sqrt(Hz)] (gyro "white noise")]
Param: OdomOpenVINS/GyroscopeRandomWalk = "0.0001"         [[rad/s^2/sqrt(Hz)] (gyro bias diffusion)]
Param: OdomOpenVINS/InitDynInflationBa = "100.0"           [What to inflate the recovered bias_a covariance by]
Param: OdomOpenVINS/InitDynInflationBg = "10.0"            [What to inflate the recovered bias_g covariance by]
Param: OdomOpenVINS/InitDynInflationOri = "10.0"           [What to inflate the recovered q_GtoI covariance by]
Param: OdomOpenVINS/InitDynInflationVel = "100.0"          [What to inflate the recovered v_IinG covariance by]
Param: OdomOpenVINS/InitDynMLEMaxIter = "50"               [How many iterations the MLE refinement should use (zero to skip the MLE)]
Param: OdomOpenVINS/InitDynMLEMaxThreads = "6"             [How many threads the MLE should use]
Param: OdomOpenVINS/InitDynMLEMaxTime = "0.05"             [How many seconds the MLE should be completed in]
Param: OdomOpenVINS/InitDynMLEOptCalib = "false"           [If we should optimize calibration during intialization (not recommended)]
Param: OdomOpenVINS/InitDynMinDeg = "10.0"                 [Orientation change needed to try to init]
Param: OdomOpenVINS/InitDynMinRecCond = "1e-15"            [Reciprocal condition number thresh for info inversion]
Param: OdomOpenVINS/InitDynNumPose = "6"                   [Number of poses to use within our window time (evenly spaced)]
Param: OdomOpenVINS/InitDynUse = "false"                   [If dynamic initialization should be used]
Param: OdomOpenVINS/InitIMUThresh = "1.0"                  [Variance threshold on our acceleration to be classified as moving]
Param: OdomOpenVINS/InitMaxDisparity = "10.0"              [Max disparity to consider the platform stationary (dependent on resolution)]
Param: OdomOpenVINS/InitMaxFeatures = "50"                 [How many features to track during initialization (saves on computation)]
Param: OdomOpenVINS/InitWindowTime = "2.0"                 [Amount of time we will initialize over (seconds)]
Param: OdomOpenVINS/Integration = "1"                      [0=discrete, 1=rk4, 2=analytical (if rk4 or analytical used then analytical covariance propagation is used)]
Param: OdomOpenVINS/LeftMaskPath = ""                      [Mask for left image]
Param: OdomOpenVINS/MaxClones = "11"                       [Max clone size of sliding window]
Param: OdomOpenVINS/MaxMSCKFInUpdate = "50"                [Max number of MSCKF features we will use at a given image timestep.]
Param: OdomOpenVINS/MaxSLAM = "50"                         [Max number of estimated SLAM features]
Param: OdomOpenVINS/MaxSLAMInUpdate = "25"                 [Max number of SLAM features we allow to be included in a single EKF update.]
Param: OdomOpenVINS/MinPxDist = "15"                       [Eistance between features (features near each other provide less information)]
Param: OdomOpenVINS/NumPts = "200"                         [Number of points (per camera) we will extract and try to track]
Param: OdomOpenVINS/RightMaskPath = ""                     [Mask for right image]
Param: OdomOpenVINS/TryZUPT = "true"                       [If we should try to use zero velocity update]
Param: OdomOpenVINS/UpMSCKFChi2Multiplier = "1.0"          [Chi2 multiplier for MSCKF features]
Param: OdomOpenVINS/UpMSCKFSigmaPx = "1.0"                 [Pixel noise for MSCKF features]
Param: OdomOpenVINS/UpSLAMChi2Multiplier = "1.0"           [Chi2 multiplier for SLAM features]
Param: OdomOpenVINS/UpSLAMSigmaPx = "1.0"                  [Pixel noise for SLAM features]
Param: OdomOpenVINS/UseFEJ = "true"                        [If first-estimate Jacobians should be used (enable for good consistency)]
Param: OdomOpenVINS/UseKLT = "true"                        [If true we will use KLT, otherwise use a ORB descriptor + robust matching]
Param: OdomOpenVINS/UseStereo = "true"                     [If we have more than 1 camera, if we should try to track stereo constraints between pairs]
Param: OdomOpenVINS/ZUPTChi2Multiplier = "0.0"             [Chi2 multiplier for zero velocity]
Param: OdomOpenVINS/ZUPTMaxDisparity = "0.5"               [Max disparity we will consider to try to do a zupt (i.e. if above this, don't do zupt)]
Param: OdomOpenVINS/ZUPTMaxVelodicy = "0.1"                [Max velocity we will consider to try to do a zupt (i.e. if above this, don't do zupt)]
Param: OdomOpenVINS/ZUPTNoiseMultiplier = "10.0"           [Multiplier of our zupt measurement IMU noise matrix (default should be 1.0)]
Param: OdomOpenVINS/ZUPTOnlyAtBeginning = "false"          [If we should only use the zupt at the very beginning static initialization phase]
Param: OdomVINS/ConfigPath = ""                            [Path of VINS config file.]
Param: OdomViso2/BucketHeight = "50"                       [Height of bucket.]
Param: OdomViso2/BucketMaxFeatures = "2"                   [Maximal number of features per bucket.]
Param: OdomViso2/BucketWidth = "50"                        [Width of bucket.]
Param: OdomViso2/InlierThreshold = "2.0"                   [Fundamental matrix inlier threshold.]
Param: OdomViso2/MatchBinsize = "50"                       [Matching bin width/height (affects efficiency only).]
Param: OdomViso2/MatchDispTolerance = "2"                  [Disparity tolerance for stereo matches (in pixels).]
Param: OdomViso2/MatchHalfResolution = "true"              [Match at half resolution, refine at full resolution.]
Param: OdomViso2/MatchMultiStage = "true"                  [Multistage matching (denser and faster).]
Param: OdomViso2/MatchNmsN = "3"                           [Non-max-suppression: min. distance between maxima (in pixels).]
Param: OdomViso2/MatchNmsTau = "50"                        [Non-max-suppression: interest point peakiness threshold.]
Param: OdomViso2/MatchOutlierDispTolerance = "5"           [Outlier removal: disparity tolerance (in pixels).]
Param: OdomViso2/MatchOutlierFlowTolerance = "5"           [Outlier removal: flow tolerance (in pixels).]
Param: OdomViso2/MatchRadius = "200"                       [Matching radius (du/dv in pixels).]
Param: OdomViso2/MatchRefinement = "1"                     [Refinement (0=none,1=pixel,2=subpixel).]
Param: OdomViso2/RansacIters = "200"                       [Number of RANSAC iterations.]
Param: OdomViso2/Reweighting = "true"                      [Lower border weights (more robust to calibration errors).]
Param: Optimizer/Epsilon = "0.00001"                       [Stop optimizing when the error improvement is less than this value.]
Param: Optimizer/GravitySigma = "0.3"                      [Gravity sigma value (>=0, typically between 0.1 and 0.3). Optimization is done while preserving gravity orientation of the poses. This should be used only with visual/lidar inertial odometry approaches, for which we assume that all odometry poses are aligned with gravity. Set to 0 to disable gravity constraints. Currently supported only with g2o and GTSAM optimization strategies (see Optimizer/Strategy).]
Param: Optimizer/Iterations = "20"                         [Optimization iterations.]
Param: Optimizer/LandmarksIgnored = "false"                [Ignore landmark constraints while optimizing. Currently only g2o and gtsam optimization supports this.]
Param: Optimizer/PriorsIgnored = "true"                    [Ignore prior constraints (global pose or GPS) while optimizing. Currently only g2o and gtsam optimization supports this.]
Param: Optimizer/Robust = "false"                          [Robust graph optimization using Vertigo (only work for g2o and GTSAM optimization strategies). Not compatible with "RGBD/OptimizeMaxError" if enabled.]
Param: Optimizer/Strategy = "2"                            [Graph optimization strategy: 0=TORO, 1=g2o, 2=GTSAM and 3=Ceres.]
Param: Optimizer/VarianceIgnored = "false"                 [Ignore constraints' variance. If checked, identity information matrix is used for each constraint. Otherwise, an information matrix is generated from the variance saved in the links.]
Param: Reg/Force3DoF = "false"                             [Force 3 degrees-of-freedom transform (3Dof: x,y and yaw). Parameters z, roll and pitch will be set to 0.]
Param: Reg/RepeatOnce = "true"                             [Do a second registration with the output of the first registration as guess. Only done if no guess was provided for the first registration (like on loop closure). It can be useful if the registration approach used can use a guess to get better matches.]
Param: Reg/Strategy = "0"                                  [0=Vis, 1=Icp, 2=VisIcp]
Param: Rtabmap/ImagesAlreadyRectified = "true"             [Images are already rectified. By default RTAB-Map assumes that received images are rectified. If they are not, they can be rectified by RTAB-Map if this parameter is false.]
Param: Rtabmap/PublishRAMUsage = "false"                   [Publishing RAM usage in statistics (may add a small overhead to get info from the system).]
Param: g2o/Baseline = "0.075"                              [When doing bundle adjustment with RGB-D data, we can set a fake baseline (m) to do stereo bundle adjustment (if 0, mono bundle adjustment is done). For stereo data, the baseline in the calibration is used directly.]
Param: g2o/Optimizer = "0"                                 [0=Levenberg 1=GaussNewton]
Param: g2o/PixelVariance = "1.0"                           [Pixel variance used for bundle adjustment.]
Param: g2o/RobustKernelDelta = "8"                         [Robust kernel delta used for bundle adjustment (0 means don't use robust kernel). Observations with chi2 over this threshold will be ignored in the second optimization pass.]
Param: g2o/Solver = "0"                                    [0=csparse 1=pcg 2=cholmod 3=Eigen]
